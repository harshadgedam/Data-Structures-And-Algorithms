#include<stdlib.h>
#include<iostream>
#include<stdio.h>
using namespace std;
struct node 
{
    int data;
    struct node *next;
    struct node *prev;
};
void Traverse(struct node *Start);
void reverseTraverse2(struct node *Start);
struct node *insertatFrist(struct node *start,int data);
struct node *insertatend(struct node *start,int data)
{
    printf("Insert ata end\n");
    struct node *ptr=start, *newnode=(struct node *)malloc(sizeof(struct node));
    newnode->data=data;
    while(ptr->next!=NULL)
    {
        ptr=ptr->next;
    }
    ptr->next=newnode;
    newnode->prev=ptr;
    newnode->next=NULL;
    return start;

}
int main()
{
    struct node *Start;
    struct node *head=(struct node *)malloc(sizeof(struct node));
    struct node *second=(struct node *)malloc(sizeof(struct node));
    struct node *third=(struct node *)malloc(sizeof(struct node));
    struct node *fourth=(struct node *)malloc(sizeof(struct node));
    struct node *fifth=(struct node *)malloc(sizeof(struct node));
    Start=head;
    head->data=12;
    head->next=second;
    head->prev=NULL;
    second->data=45;
    second->next=third;
    second->prev=head;
    third->data=99;
    third->next=fourth;
    third->prev=second;
    fourth->data=88;
    fourth->next=fifth;
    fourth->prev=third;
    fifth->data=90;
    fifth->next=NULL;
    fifth->prev=fourth;
    Traverse(Start);
     reverseTraverse2(fifth);
     Start=insertatFrist(Start,890);
     Traverse(Start);
     Start=insertatend(Start,786);
     Traverse(Start);
    return 0;
};
void Traverse(struct node *head)
{
    printf("Traversing Algoritham \n");
    while(head!=NULL)
    {
        cout<<head->data<<endl;
        head=head->next;
    };
};
void reverseTraverse2(struct node *Last)
{
    printf("Traversing Algoritham From Last Node \n");
   /* while(head!=NULL)
    {
        //cout<<head->data<<endl;
        head=head->next;
    };*/
    while(Last!=NULL)
    {
        cout<<Last->data<<endl;
        Last=Last->prev;
    };
};
struct node *insertatFrist(struct node *start,int data)
{
    cout<<"Insert at Frist"<<endl;
    struct node *newnode=(struct node *)malloc(sizeof(struct node));
    newnode->next=start;
    newnode->prev=NULL;
    newnode->data=data;
    start=newnode;
    return start;
};
